Computing paths from a 


Itr: 0
Distance to a:0.0
Pred: a
All vertices except for vertex 'a' have a distance of INFINITY and the predecessor as vertex 'a'.

Itr: 1

Any vertex in the graph, that is not listed as a target in this iteration can be assumed to have the distance and predcessor values previously assigned in the last iteration. 

#Root Node: a 
Target:b
Distance to b: 2.0
Pred: a 
Path: [a , b]
In Queue: [b]


#Root Node: a 
Target:c 
Distance to c : 8.0
Pred: a 
Path: [a , c ]
In Queue: [b, c ]


Itr: 2

Any vertex in the graph, that is not listed as a target in this iteration can be assumed to have the distance and predcessor values previously assigned in the last iteration. 

#Root Node: b
Target:d
Distance to d: 5.0
Pred: b
Path: [a , b, d]
In Queue: [d]


Itr: 3

Any vertex in the graph, that is not listed as a target in this iteration can be assumed to have the distance and predcessor values previously assigned in the last iteration. 

#Root Node: d
Target:c 
Distance to c : 6.0
Pred: d
Path: [a , b, d, c ]
In Queue: [c ]


#Root Node: d
Target:e 
Distance to e : 12.0
Pred: d
Path: [a , b, d, e ]
In Queue: [c , e ]


#Root Node: d
Target:f
Distance to f: 11.0
Pred: d
Path: [a , b, d, f]
In Queue: [c , e , f]


Itr: 4

Any vertex in the graph, that is not listed as a target in this iteration can be assumed to have the distance and predcessor values previously assigned in the last iteration. 

#Root Node: c 
Target:e 
Distance to e : 6.0
Pred: c 
Path: [a , b, d, c , e ]
In Queue: [e ]


Itr: 5

Any vertex in the graph, that is not listed as a target in this iteration can be assumed to have the distance and predcessor values previously assigned in the last iteration. 

#Root Node: e 
Target:f
Distance to f: 8.0
Pred: e 
Path: [a , b, d, c , e , f]
In Queue: [f]


SHORTEST PATH DETERMINED (LAST ITERATION):
Distance to a : 0.0
Path: [a ]

Distance to e : 6.0
Path: [a , b, d, c , e ]

Distance to f: 8.0
Path: [a , b, d, c , e , f]

Distance to d: 5.0
Path: [a , b, d]

Distance to c : 6.0
Path: [a , b, d, c ]

Distance to b: 2.0
Path: [a , b]

It took 0.209 seconds to solve the problem.
